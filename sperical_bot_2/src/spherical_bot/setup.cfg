[develop]
script_dir=$base/lib/spherical_bot

[install]
install_scripts=$base/lib/spherical_bot

[metadata]
name = spherical_bot
version = 1.0.0
description = Self-balancing spherical robot with real-time control and cloud navigation
author = Om Kolse
author_email = omkolse25@gmail.com
license = Apache-2.0
keywords = ros2,robotics,self-balancing,autonomous,navigation
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Education
    Intended Audience :: Science/Research
    License :: OSI Approved :: Apache Software License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Scientific/Engineering :: Robotics

[options]
include_package_data = True
packages = find:
python_requires = >=3.8
install_requires =
    rclpy>=3.0.0
    std_msgs>=4.2.0
    sensor_msgs>=4.2.0
    geometry_msgs>=4.2.0
    nav_msgs>=4.2.0
    tf2_ros>=0.25.0
    tf2_geometry_msgs>=0.25.0
    numpy>=1.21.0
    opencv-python>=4.5.0
    PyYAML>=6.0
    pyserial>=3.5
    psutil>=5.8.0
    paho-mqtt>=1.6.0
    websockets>=10.0

[options.packages.find]
include = 
    spherical_bot*
    spherical_bot.nodes*
    spherical_bot.lib*
    spherical_bot.scripts*
    spherical_bot.test*
exclude = 
    test*
    docs*
    scripts*

[options.entry_points]
console_scripts =
    core_controller = spherical_bot.nodes.core_controller:main
    sensor_manager = spherical_bot.nodes.sensor_manager:main
    cloud_bridge = spherical_bot.nodes.cloud_bridge:main
    system_guardian = spherical_bot.nodes.system_guardian:main
    spherical_bot_calibration = spherical_bot.scripts.calibration:main
    spherical_bot_diagnostics = spherical_bot.scripts.diagnostics:main
    spherical_bot_emergency = spherical_bot.scripts.emergency_stop:main

[flake8]
max-line-length = 100
ignore = 
    E203,
    E266,
    E501,
    W503,
    E402,
    F841

[coverage:run]
omit = 
    */test/*
    */test_*
    */__init__.py
    */setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*Mock.:
    @abc.abstractmethod